// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	abi "github.com/ethereum/go-ethereum/accounts/abi"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IController is an autogenerated mock type for the IController type
type IController struct {
	mock.Mock
}

// LoadAbi provides a mock function with given fields: path
func (_m *IController) LoadAbi(path string) (*abi.ABI, error) {
	ret := _m.Called(path)

	var r0 *abi.ABI
	if rf, ok := ret.Get(0).(func(string) *abi.ABI); ok {
		r0 = rf(path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*abi.ABI)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIController creates a new instance of IController. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIController(t testing.TB) *IController {
	mock := &IController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
