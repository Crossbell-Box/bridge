// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package crossbellGateway

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DataTypesDepositEntry is an auto generated low-level Go binding around an user-defined struct.
type DataTypesDepositEntry struct {
	ChainId   *big.Int
	Recipient common.Address
	Token     common.Address
	Amount    *big.Int
}

// DataTypesMappedToken is an auto generated low-level Go binding around an user-defined struct.
type DataTypesMappedToken struct {
	Token    common.Address
	Decimals uint8
}

// DataTypesWithdrawalEntry is an auto generated low-level Go binding around an user-defined struct.
type DataTypesWithdrawalEntry struct {
	ChainId   *big.Int
	Recipient common.Address
	Token     common.Address
	Amount    *big.Int
	Fee       *big.Int
}

// CrossbellGatewayMetaData contains all meta data concerning the CrossbellGateway contract.
var CrossbellGatewayMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AckDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"SubmitWithdrawalSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"crossbellTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"mainchainTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"mainchainTokenDecimals\",\"type\":\"uint8[]\"}],\"name\":\"TokenMapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ackDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchAckDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"sigs\",\"type\":\"bytes[]\"}],\"name\":\"batchSubmitWithdrawalSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getAcknowledgementCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getAcknowledgementStatus\",\"outputs\":[{\"internalType\":\"enumDataTypes.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"name\":\"getDepositEntry\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"structDataTypes.DepositEntry\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"crossbellToken\",\"type\":\"address\"}],\"name\":\"getMainchainToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"structDataTypes.MappedToken\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getValidatorAcknowledgementHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidatorContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawalEntry\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"structDataTypes.WithdrawalEntry\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawalSignatures\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"sigs\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"crossbellTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"mainchainTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"mainchainTokenDecimals\",\"type\":\"uint8[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"crossbellTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"mainchainTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"mainchainTokenDecimals\",\"type\":\"uint8[]\"}],\"name\":\"mapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"requestWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"submitWithdrawalSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// CrossbellGatewayABI is the input ABI used to generate the binding from.
// Deprecated: Use CrossbellGatewayMetaData.ABI instead.
var CrossbellGatewayABI = CrossbellGatewayMetaData.ABI

// CrossbellGatewayBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use CrossbellGatewayMetaData.Bin instead.
var CrossbellGatewayBin = CrossbellGatewayMetaData.Bin

// DeployCrossbellGateway deploys a new Ethereum contract, binding an instance of CrossbellGateway to it.
func DeployCrossbellGateway(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *CrossbellGateway, error) {
	parsed, err := CrossbellGatewayMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(CrossbellGatewayBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &CrossbellGateway{CrossbellGatewayCaller: CrossbellGatewayCaller{contract: contract}, CrossbellGatewayTransactor: CrossbellGatewayTransactor{contract: contract}, CrossbellGatewayFilterer: CrossbellGatewayFilterer{contract: contract}}, nil
}

// CrossbellGateway is an auto generated Go binding around an Ethereum contract.
type CrossbellGateway struct {
	CrossbellGatewayCaller     // Read-only binding to the contract
	CrossbellGatewayTransactor // Write-only binding to the contract
	CrossbellGatewayFilterer   // Log filterer for contract events
}

// CrossbellGatewayCaller is an auto generated read-only Go binding around an Ethereum contract.
type CrossbellGatewayCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossbellGatewayTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CrossbellGatewayTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossbellGatewayFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CrossbellGatewayFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossbellGatewaySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CrossbellGatewaySession struct {
	Contract     *CrossbellGateway // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CrossbellGatewayCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CrossbellGatewayCallerSession struct {
	Contract *CrossbellGatewayCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// CrossbellGatewayTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CrossbellGatewayTransactorSession struct {
	Contract     *CrossbellGatewayTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// CrossbellGatewayRaw is an auto generated low-level Go binding around an Ethereum contract.
type CrossbellGatewayRaw struct {
	Contract *CrossbellGateway // Generic contract binding to access the raw methods on
}

// CrossbellGatewayCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CrossbellGatewayCallerRaw struct {
	Contract *CrossbellGatewayCaller // Generic read-only contract binding to access the raw methods on
}

// CrossbellGatewayTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CrossbellGatewayTransactorRaw struct {
	Contract *CrossbellGatewayTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCrossbellGateway creates a new instance of CrossbellGateway, bound to a specific deployed contract.
func NewCrossbellGateway(address common.Address, backend bind.ContractBackend) (*CrossbellGateway, error) {
	contract, err := bindCrossbellGateway(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CrossbellGateway{CrossbellGatewayCaller: CrossbellGatewayCaller{contract: contract}, CrossbellGatewayTransactor: CrossbellGatewayTransactor{contract: contract}, CrossbellGatewayFilterer: CrossbellGatewayFilterer{contract: contract}}, nil
}

// NewCrossbellGatewayCaller creates a new read-only instance of CrossbellGateway, bound to a specific deployed contract.
func NewCrossbellGatewayCaller(address common.Address, caller bind.ContractCaller) (*CrossbellGatewayCaller, error) {
	contract, err := bindCrossbellGateway(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayCaller{contract: contract}, nil
}

// NewCrossbellGatewayTransactor creates a new write-only instance of CrossbellGateway, bound to a specific deployed contract.
func NewCrossbellGatewayTransactor(address common.Address, transactor bind.ContractTransactor) (*CrossbellGatewayTransactor, error) {
	contract, err := bindCrossbellGateway(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayTransactor{contract: contract}, nil
}

// NewCrossbellGatewayFilterer creates a new log filterer instance of CrossbellGateway, bound to a specific deployed contract.
func NewCrossbellGatewayFilterer(address common.Address, filterer bind.ContractFilterer) (*CrossbellGatewayFilterer, error) {
	contract, err := bindCrossbellGateway(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayFilterer{contract: contract}, nil
}

// bindCrossbellGateway binds a generic wrapper to an already deployed contract.
func bindCrossbellGateway(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CrossbellGatewayABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CrossbellGateway *CrossbellGatewayRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CrossbellGateway.Contract.CrossbellGatewayCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CrossbellGateway *CrossbellGatewayRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.CrossbellGatewayTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CrossbellGateway *CrossbellGatewayRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.CrossbellGatewayTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CrossbellGateway *CrossbellGatewayCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CrossbellGateway.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CrossbellGateway *CrossbellGatewayTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CrossbellGateway *CrossbellGatewayTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.contract.Transact(opts, method, params...)
}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCaller) ADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewaySession) ADMINROLE() ([32]byte, error) {
	return _CrossbellGateway.Contract.ADMINROLE(&_CrossbellGateway.CallOpts)
}

// ADMINROLE is a free data retrieval call binding the contract method 0x75b238fc.
//
// Solidity: function ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCallerSession) ADMINROLE() ([32]byte, error) {
	return _CrossbellGateway.Contract.ADMINROLE(&_CrossbellGateway.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewaySession) DEFAULTADMINROLE() ([32]byte, error) {
	return _CrossbellGateway.Contract.DEFAULTADMINROLE(&_CrossbellGateway.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _CrossbellGateway.Contract.DEFAULTADMINROLE(&_CrossbellGateway.CallOpts)
}

// GetAcknowledgementCount is a free data retrieval call binding the contract method 0x7a597ecc.
//
// Solidity: function getAcknowledgementCount(uint256 chainId, uint256 id, bytes32 hash) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCaller) GetAcknowledgementCount(opts *bind.CallOpts, chainId *big.Int, id *big.Int, hash [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getAcknowledgementCount", chainId, id, hash)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAcknowledgementCount is a free data retrieval call binding the contract method 0x7a597ecc.
//
// Solidity: function getAcknowledgementCount(uint256 chainId, uint256 id, bytes32 hash) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewaySession) GetAcknowledgementCount(chainId *big.Int, id *big.Int, hash [32]byte) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetAcknowledgementCount(&_CrossbellGateway.CallOpts, chainId, id, hash)
}

// GetAcknowledgementCount is a free data retrieval call binding the contract method 0x7a597ecc.
//
// Solidity: function getAcknowledgementCount(uint256 chainId, uint256 id, bytes32 hash) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetAcknowledgementCount(chainId *big.Int, id *big.Int, hash [32]byte) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetAcknowledgementCount(&_CrossbellGateway.CallOpts, chainId, id, hash)
}

// GetAcknowledgementStatus is a free data retrieval call binding the contract method 0xdaaf394a.
//
// Solidity: function getAcknowledgementStatus(uint256 chainId, uint256 id, bytes32 hash) view returns(uint8)
func (_CrossbellGateway *CrossbellGatewayCaller) GetAcknowledgementStatus(opts *bind.CallOpts, chainId *big.Int, id *big.Int, hash [32]byte) (uint8, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getAcknowledgementStatus", chainId, id, hash)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetAcknowledgementStatus is a free data retrieval call binding the contract method 0xdaaf394a.
//
// Solidity: function getAcknowledgementStatus(uint256 chainId, uint256 id, bytes32 hash) view returns(uint8)
func (_CrossbellGateway *CrossbellGatewaySession) GetAcknowledgementStatus(chainId *big.Int, id *big.Int, hash [32]byte) (uint8, error) {
	return _CrossbellGateway.Contract.GetAcknowledgementStatus(&_CrossbellGateway.CallOpts, chainId, id, hash)
}

// GetAcknowledgementStatus is a free data retrieval call binding the contract method 0xdaaf394a.
//
// Solidity: function getAcknowledgementStatus(uint256 chainId, uint256 id, bytes32 hash) view returns(uint8)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetAcknowledgementStatus(chainId *big.Int, id *big.Int, hash [32]byte) (uint8, error) {
	return _CrossbellGateway.Contract.GetAcknowledgementStatus(&_CrossbellGateway.CallOpts, chainId, id, hash)
}

// GetDepositEntry is a free data retrieval call binding the contract method 0x3a9e6613.
//
// Solidity: function getDepositEntry(uint256 chainId, uint256 depositId) view returns((uint256,address,address,uint256))
func (_CrossbellGateway *CrossbellGatewayCaller) GetDepositEntry(opts *bind.CallOpts, chainId *big.Int, depositId *big.Int) (DataTypesDepositEntry, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getDepositEntry", chainId, depositId)

	if err != nil {
		return *new(DataTypesDepositEntry), err
	}

	out0 := *abi.ConvertType(out[0], new(DataTypesDepositEntry)).(*DataTypesDepositEntry)

	return out0, err

}

// GetDepositEntry is a free data retrieval call binding the contract method 0x3a9e6613.
//
// Solidity: function getDepositEntry(uint256 chainId, uint256 depositId) view returns((uint256,address,address,uint256))
func (_CrossbellGateway *CrossbellGatewaySession) GetDepositEntry(chainId *big.Int, depositId *big.Int) (DataTypesDepositEntry, error) {
	return _CrossbellGateway.Contract.GetDepositEntry(&_CrossbellGateway.CallOpts, chainId, depositId)
}

// GetDepositEntry is a free data retrieval call binding the contract method 0x3a9e6613.
//
// Solidity: function getDepositEntry(uint256 chainId, uint256 depositId) view returns((uint256,address,address,uint256))
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetDepositEntry(chainId *big.Int, depositId *big.Int) (DataTypesDepositEntry, error) {
	return _CrossbellGateway.Contract.GetDepositEntry(&_CrossbellGateway.CallOpts, chainId, depositId)
}

// GetMainchainToken is a free data retrieval call binding the contract method 0xd587cc60.
//
// Solidity: function getMainchainToken(uint256 chainId, address crossbellToken) view returns((address,uint8) token)
func (_CrossbellGateway *CrossbellGatewayCaller) GetMainchainToken(opts *bind.CallOpts, chainId *big.Int, crossbellToken common.Address) (DataTypesMappedToken, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getMainchainToken", chainId, crossbellToken)

	if err != nil {
		return *new(DataTypesMappedToken), err
	}

	out0 := *abi.ConvertType(out[0], new(DataTypesMappedToken)).(*DataTypesMappedToken)

	return out0, err

}

// GetMainchainToken is a free data retrieval call binding the contract method 0xd587cc60.
//
// Solidity: function getMainchainToken(uint256 chainId, address crossbellToken) view returns((address,uint8) token)
func (_CrossbellGateway *CrossbellGatewaySession) GetMainchainToken(chainId *big.Int, crossbellToken common.Address) (DataTypesMappedToken, error) {
	return _CrossbellGateway.Contract.GetMainchainToken(&_CrossbellGateway.CallOpts, chainId, crossbellToken)
}

// GetMainchainToken is a free data retrieval call binding the contract method 0xd587cc60.
//
// Solidity: function getMainchainToken(uint256 chainId, address crossbellToken) view returns((address,uint8) token)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetMainchainToken(chainId *big.Int, crossbellToken common.Address) (DataTypesMappedToken, error) {
	return _CrossbellGateway.Contract.GetMainchainToken(&_CrossbellGateway.CallOpts, chainId, crossbellToken)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewaySession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _CrossbellGateway.Contract.GetRoleAdmin(&_CrossbellGateway.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _CrossbellGateway.Contract.GetRoleAdmin(&_CrossbellGateway.CallOpts, role)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_CrossbellGateway *CrossbellGatewayCaller) GetRoleMember(opts *bind.CallOpts, role [32]byte, index *big.Int) (common.Address, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getRoleMember", role, index)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_CrossbellGateway *CrossbellGatewaySession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _CrossbellGateway.Contract.GetRoleMember(&_CrossbellGateway.CallOpts, role, index)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _CrossbellGateway.Contract.GetRoleMember(&_CrossbellGateway.CallOpts, role, index)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCaller) GetRoleMemberCount(opts *bind.CallOpts, role [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getRoleMemberCount", role)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewaySession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetRoleMemberCount(&_CrossbellGateway.CallOpts, role)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetRoleMemberCount(&_CrossbellGateway.CallOpts, role)
}

// GetValidatorAcknowledgementHash is a free data retrieval call binding the contract method 0xb8d5c2e6.
//
// Solidity: function getValidatorAcknowledgementHash(uint256 chainId, uint256 id, address validator) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCaller) GetValidatorAcknowledgementHash(opts *bind.CallOpts, chainId *big.Int, id *big.Int, validator common.Address) ([32]byte, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getValidatorAcknowledgementHash", chainId, id, validator)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetValidatorAcknowledgementHash is a free data retrieval call binding the contract method 0xb8d5c2e6.
//
// Solidity: function getValidatorAcknowledgementHash(uint256 chainId, uint256 id, address validator) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewaySession) GetValidatorAcknowledgementHash(chainId *big.Int, id *big.Int, validator common.Address) ([32]byte, error) {
	return _CrossbellGateway.Contract.GetValidatorAcknowledgementHash(&_CrossbellGateway.CallOpts, chainId, id, validator)
}

// GetValidatorAcknowledgementHash is a free data retrieval call binding the contract method 0xb8d5c2e6.
//
// Solidity: function getValidatorAcknowledgementHash(uint256 chainId, uint256 id, address validator) view returns(bytes32)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetValidatorAcknowledgementHash(chainId *big.Int, id *big.Int, validator common.Address) ([32]byte, error) {
	return _CrossbellGateway.Contract.GetValidatorAcknowledgementHash(&_CrossbellGateway.CallOpts, chainId, id, validator)
}

// GetValidatorContract is a free data retrieval call binding the contract method 0x6f94c5e9.
//
// Solidity: function getValidatorContract() view returns(address)
func (_CrossbellGateway *CrossbellGatewayCaller) GetValidatorContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getValidatorContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetValidatorContract is a free data retrieval call binding the contract method 0x6f94c5e9.
//
// Solidity: function getValidatorContract() view returns(address)
func (_CrossbellGateway *CrossbellGatewaySession) GetValidatorContract() (common.Address, error) {
	return _CrossbellGateway.Contract.GetValidatorContract(&_CrossbellGateway.CallOpts)
}

// GetValidatorContract is a free data retrieval call binding the contract method 0x6f94c5e9.
//
// Solidity: function getValidatorContract() view returns(address)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetValidatorContract() (common.Address, error) {
	return _CrossbellGateway.Contract.GetValidatorContract(&_CrossbellGateway.CallOpts)
}

// GetWithdrawalCount is a free data retrieval call binding the contract method 0x80f3603a.
//
// Solidity: function getWithdrawalCount(uint256 chainId) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCaller) GetWithdrawalCount(opts *bind.CallOpts, chainId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getWithdrawalCount", chainId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetWithdrawalCount is a free data retrieval call binding the contract method 0x80f3603a.
//
// Solidity: function getWithdrawalCount(uint256 chainId) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewaySession) GetWithdrawalCount(chainId *big.Int) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetWithdrawalCount(&_CrossbellGateway.CallOpts, chainId)
}

// GetWithdrawalCount is a free data retrieval call binding the contract method 0x80f3603a.
//
// Solidity: function getWithdrawalCount(uint256 chainId) view returns(uint256)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetWithdrawalCount(chainId *big.Int) (*big.Int, error) {
	return _CrossbellGateway.Contract.GetWithdrawalCount(&_CrossbellGateway.CallOpts, chainId)
}

// GetWithdrawalEntry is a free data retrieval call binding the contract method 0x53f809b1.
//
// Solidity: function getWithdrawalEntry(uint256 chainId, uint256 withdrawalId) view returns((uint256,address,address,uint256,uint256))
func (_CrossbellGateway *CrossbellGatewayCaller) GetWithdrawalEntry(opts *bind.CallOpts, chainId *big.Int, withdrawalId *big.Int) (DataTypesWithdrawalEntry, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getWithdrawalEntry", chainId, withdrawalId)

	if err != nil {
		return *new(DataTypesWithdrawalEntry), err
	}

	out0 := *abi.ConvertType(out[0], new(DataTypesWithdrawalEntry)).(*DataTypesWithdrawalEntry)

	return out0, err

}

// GetWithdrawalEntry is a free data retrieval call binding the contract method 0x53f809b1.
//
// Solidity: function getWithdrawalEntry(uint256 chainId, uint256 withdrawalId) view returns((uint256,address,address,uint256,uint256))
func (_CrossbellGateway *CrossbellGatewaySession) GetWithdrawalEntry(chainId *big.Int, withdrawalId *big.Int) (DataTypesWithdrawalEntry, error) {
	return _CrossbellGateway.Contract.GetWithdrawalEntry(&_CrossbellGateway.CallOpts, chainId, withdrawalId)
}

// GetWithdrawalEntry is a free data retrieval call binding the contract method 0x53f809b1.
//
// Solidity: function getWithdrawalEntry(uint256 chainId, uint256 withdrawalId) view returns((uint256,address,address,uint256,uint256))
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetWithdrawalEntry(chainId *big.Int, withdrawalId *big.Int) (DataTypesWithdrawalEntry, error) {
	return _CrossbellGateway.Contract.GetWithdrawalEntry(&_CrossbellGateway.CallOpts, chainId, withdrawalId)
}

// GetWithdrawalSignatures is a free data retrieval call binding the contract method 0x43fb02c7.
//
// Solidity: function getWithdrawalSignatures(uint256 chainId, uint256 withdrawalId) view returns(address[] signers, bytes[] sigs)
func (_CrossbellGateway *CrossbellGatewayCaller) GetWithdrawalSignatures(opts *bind.CallOpts, chainId *big.Int, withdrawalId *big.Int) (struct {
	Signers []common.Address
	Sigs    [][]byte
}, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "getWithdrawalSignatures", chainId, withdrawalId)

	outstruct := new(struct {
		Signers []common.Address
		Sigs    [][]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Signers = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.Sigs = *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)

	return *outstruct, err

}

// GetWithdrawalSignatures is a free data retrieval call binding the contract method 0x43fb02c7.
//
// Solidity: function getWithdrawalSignatures(uint256 chainId, uint256 withdrawalId) view returns(address[] signers, bytes[] sigs)
func (_CrossbellGateway *CrossbellGatewaySession) GetWithdrawalSignatures(chainId *big.Int, withdrawalId *big.Int) (struct {
	Signers []common.Address
	Sigs    [][]byte
}, error) {
	return _CrossbellGateway.Contract.GetWithdrawalSignatures(&_CrossbellGateway.CallOpts, chainId, withdrawalId)
}

// GetWithdrawalSignatures is a free data retrieval call binding the contract method 0x43fb02c7.
//
// Solidity: function getWithdrawalSignatures(uint256 chainId, uint256 withdrawalId) view returns(address[] signers, bytes[] sigs)
func (_CrossbellGateway *CrossbellGatewayCallerSession) GetWithdrawalSignatures(chainId *big.Int, withdrawalId *big.Int) (struct {
	Signers []common.Address
	Sigs    [][]byte
}, error) {
	return _CrossbellGateway.Contract.GetWithdrawalSignatures(&_CrossbellGateway.CallOpts, chainId, withdrawalId)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_CrossbellGateway *CrossbellGatewaySession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _CrossbellGateway.Contract.HasRole(&_CrossbellGateway.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _CrossbellGateway.Contract.HasRole(&_CrossbellGateway.CallOpts, role, account)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_CrossbellGateway *CrossbellGatewaySession) Paused() (bool, error) {
	return _CrossbellGateway.Contract.Paused(&_CrossbellGateway.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCallerSession) Paused() (bool, error) {
	return _CrossbellGateway.Contract.Paused(&_CrossbellGateway.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _CrossbellGateway.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_CrossbellGateway *CrossbellGatewaySession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _CrossbellGateway.Contract.SupportsInterface(&_CrossbellGateway.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_CrossbellGateway *CrossbellGatewayCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _CrossbellGateway.Contract.SupportsInterface(&_CrossbellGateway.CallOpts, interfaceId)
}

// AckDeposit is a paid mutator transaction binding the contract method 0xcfd6d70f.
//
// Solidity: function ackDeposit(uint256 chainId, uint256 depositId, address recipient, address token, uint256 amount) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) AckDeposit(opts *bind.TransactOpts, chainId *big.Int, depositId *big.Int, recipient common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "ackDeposit", chainId, depositId, recipient, token, amount)
}

// AckDeposit is a paid mutator transaction binding the contract method 0xcfd6d70f.
//
// Solidity: function ackDeposit(uint256 chainId, uint256 depositId, address recipient, address token, uint256 amount) returns()
func (_CrossbellGateway *CrossbellGatewaySession) AckDeposit(chainId *big.Int, depositId *big.Int, recipient common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.AckDeposit(&_CrossbellGateway.TransactOpts, chainId, depositId, recipient, token, amount)
}

// AckDeposit is a paid mutator transaction binding the contract method 0xcfd6d70f.
//
// Solidity: function ackDeposit(uint256 chainId, uint256 depositId, address recipient, address token, uint256 amount) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) AckDeposit(chainId *big.Int, depositId *big.Int, recipient common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.AckDeposit(&_CrossbellGateway.TransactOpts, chainId, depositId, recipient, token, amount)
}

// BatchAckDeposit is a paid mutator transaction binding the contract method 0xe7adc963.
//
// Solidity: function batchAckDeposit(uint256[] chainIds, uint256[] depositIds, address[] recipients, address[] tokens, uint256[] amounts) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) BatchAckDeposit(opts *bind.TransactOpts, chainIds []*big.Int, depositIds []*big.Int, recipients []common.Address, tokens []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "batchAckDeposit", chainIds, depositIds, recipients, tokens, amounts)
}

// BatchAckDeposit is a paid mutator transaction binding the contract method 0xe7adc963.
//
// Solidity: function batchAckDeposit(uint256[] chainIds, uint256[] depositIds, address[] recipients, address[] tokens, uint256[] amounts) returns()
func (_CrossbellGateway *CrossbellGatewaySession) BatchAckDeposit(chainIds []*big.Int, depositIds []*big.Int, recipients []common.Address, tokens []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.BatchAckDeposit(&_CrossbellGateway.TransactOpts, chainIds, depositIds, recipients, tokens, amounts)
}

// BatchAckDeposit is a paid mutator transaction binding the contract method 0xe7adc963.
//
// Solidity: function batchAckDeposit(uint256[] chainIds, uint256[] depositIds, address[] recipients, address[] tokens, uint256[] amounts) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) BatchAckDeposit(chainIds []*big.Int, depositIds []*big.Int, recipients []common.Address, tokens []common.Address, amounts []*big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.BatchAckDeposit(&_CrossbellGateway.TransactOpts, chainIds, depositIds, recipients, tokens, amounts)
}

// BatchSubmitWithdrawalSignatures is a paid mutator transaction binding the contract method 0xbde268a1.
//
// Solidity: function batchSubmitWithdrawalSignatures(uint256[] chainIds, uint256[] withdrawalIds, bytes[] sigs) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) BatchSubmitWithdrawalSignatures(opts *bind.TransactOpts, chainIds []*big.Int, withdrawalIds []*big.Int, sigs [][]byte) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "batchSubmitWithdrawalSignatures", chainIds, withdrawalIds, sigs)
}

// BatchSubmitWithdrawalSignatures is a paid mutator transaction binding the contract method 0xbde268a1.
//
// Solidity: function batchSubmitWithdrawalSignatures(uint256[] chainIds, uint256[] withdrawalIds, bytes[] sigs) returns()
func (_CrossbellGateway *CrossbellGatewaySession) BatchSubmitWithdrawalSignatures(chainIds []*big.Int, withdrawalIds []*big.Int, sigs [][]byte) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.BatchSubmitWithdrawalSignatures(&_CrossbellGateway.TransactOpts, chainIds, withdrawalIds, sigs)
}

// BatchSubmitWithdrawalSignatures is a paid mutator transaction binding the contract method 0xbde268a1.
//
// Solidity: function batchSubmitWithdrawalSignatures(uint256[] chainIds, uint256[] withdrawalIds, bytes[] sigs) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) BatchSubmitWithdrawalSignatures(chainIds []*big.Int, withdrawalIds []*big.Int, sigs [][]byte) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.BatchSubmitWithdrawalSignatures(&_CrossbellGateway.TransactOpts, chainIds, withdrawalIds, sigs)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewaySession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.GrantRole(&_CrossbellGateway.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.GrantRole(&_CrossbellGateway.TransactOpts, role, account)
}

// Initialize is a paid mutator transaction binding the contract method 0xa26b2906.
//
// Solidity: function initialize(address validator, address admin, address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) Initialize(opts *bind.TransactOpts, validator common.Address, admin common.Address, crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "initialize", validator, admin, crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// Initialize is a paid mutator transaction binding the contract method 0xa26b2906.
//
// Solidity: function initialize(address validator, address admin, address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewaySession) Initialize(validator common.Address, admin common.Address, crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Initialize(&_CrossbellGateway.TransactOpts, validator, admin, crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// Initialize is a paid mutator transaction binding the contract method 0xa26b2906.
//
// Solidity: function initialize(address validator, address admin, address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) Initialize(validator common.Address, admin common.Address, crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Initialize(&_CrossbellGateway.TransactOpts, validator, admin, crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// MapTokens is a paid mutator transaction binding the contract method 0x0dfd6d30.
//
// Solidity: function mapTokens(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) MapTokens(opts *bind.TransactOpts, crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "mapTokens", crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// MapTokens is a paid mutator transaction binding the contract method 0x0dfd6d30.
//
// Solidity: function mapTokens(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewaySession) MapTokens(crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.MapTokens(&_CrossbellGateway.TransactOpts, crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// MapTokens is a paid mutator transaction binding the contract method 0x0dfd6d30.
//
// Solidity: function mapTokens(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) MapTokens(crossbellTokens []common.Address, chainIds []*big.Int, mainchainTokens []common.Address, mainchainTokenDecimals []uint8) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.MapTokens(&_CrossbellGateway.TransactOpts, crossbellTokens, chainIds, mainchainTokens, mainchainTokenDecimals)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_CrossbellGateway *CrossbellGatewaySession) Pause() (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Pause(&_CrossbellGateway.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) Pause() (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Pause(&_CrossbellGateway.TransactOpts)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewaySession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RenounceRole(&_CrossbellGateway.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RenounceRole(&_CrossbellGateway.TransactOpts, role, account)
}

// RequestWithdrawal is a paid mutator transaction binding the contract method 0xe5001d7c.
//
// Solidity: function requestWithdrawal(uint256 chainId, address recipient, address token, uint256 amount, uint256 fee) returns(uint256 withdrawalId)
func (_CrossbellGateway *CrossbellGatewayTransactor) RequestWithdrawal(opts *bind.TransactOpts, chainId *big.Int, recipient common.Address, token common.Address, amount *big.Int, fee *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "requestWithdrawal", chainId, recipient, token, amount, fee)
}

// RequestWithdrawal is a paid mutator transaction binding the contract method 0xe5001d7c.
//
// Solidity: function requestWithdrawal(uint256 chainId, address recipient, address token, uint256 amount, uint256 fee) returns(uint256 withdrawalId)
func (_CrossbellGateway *CrossbellGatewaySession) RequestWithdrawal(chainId *big.Int, recipient common.Address, token common.Address, amount *big.Int, fee *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RequestWithdrawal(&_CrossbellGateway.TransactOpts, chainId, recipient, token, amount, fee)
}

// RequestWithdrawal is a paid mutator transaction binding the contract method 0xe5001d7c.
//
// Solidity: function requestWithdrawal(uint256 chainId, address recipient, address token, uint256 amount, uint256 fee) returns(uint256 withdrawalId)
func (_CrossbellGateway *CrossbellGatewayTransactorSession) RequestWithdrawal(chainId *big.Int, recipient common.Address, token common.Address, amount *big.Int, fee *big.Int) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RequestWithdrawal(&_CrossbellGateway.TransactOpts, chainId, recipient, token, amount, fee)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewaySession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RevokeRole(&_CrossbellGateway.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.RevokeRole(&_CrossbellGateway.TransactOpts, role, account)
}

// SubmitWithdrawalSignature is a paid mutator transaction binding the contract method 0x3e397b03.
//
// Solidity: function submitWithdrawalSignature(uint256 chainId, uint256 withdrawalId, bytes sig) returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) SubmitWithdrawalSignature(opts *bind.TransactOpts, chainId *big.Int, withdrawalId *big.Int, sig []byte) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "submitWithdrawalSignature", chainId, withdrawalId, sig)
}

// SubmitWithdrawalSignature is a paid mutator transaction binding the contract method 0x3e397b03.
//
// Solidity: function submitWithdrawalSignature(uint256 chainId, uint256 withdrawalId, bytes sig) returns()
func (_CrossbellGateway *CrossbellGatewaySession) SubmitWithdrawalSignature(chainId *big.Int, withdrawalId *big.Int, sig []byte) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.SubmitWithdrawalSignature(&_CrossbellGateway.TransactOpts, chainId, withdrawalId, sig)
}

// SubmitWithdrawalSignature is a paid mutator transaction binding the contract method 0x3e397b03.
//
// Solidity: function submitWithdrawalSignature(uint256 chainId, uint256 withdrawalId, bytes sig) returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) SubmitWithdrawalSignature(chainId *big.Int, withdrawalId *big.Int, sig []byte) (*types.Transaction, error) {
	return _CrossbellGateway.Contract.SubmitWithdrawalSignature(&_CrossbellGateway.TransactOpts, chainId, withdrawalId, sig)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_CrossbellGateway *CrossbellGatewayTransactor) Unpause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossbellGateway.contract.Transact(opts, "unpause")
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_CrossbellGateway *CrossbellGatewaySession) Unpause() (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Unpause(&_CrossbellGateway.TransactOpts)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_CrossbellGateway *CrossbellGatewayTransactorSession) Unpause() (*types.Transaction, error) {
	return _CrossbellGateway.Contract.Unpause(&_CrossbellGateway.TransactOpts)
}

// CrossbellGatewayAckDepositIterator is returned from FilterAckDeposit and is used to iterate over the raw logs and unpacked data for AckDeposit events raised by the CrossbellGateway contract.
type CrossbellGatewayAckDepositIterator struct {
	Event *CrossbellGatewayAckDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayAckDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayAckDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayAckDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayAckDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayAckDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayAckDeposit represents a AckDeposit event raised by the CrossbellGateway contract.
type CrossbellGatewayAckDeposit struct {
	ChainId   *big.Int
	DepositId *big.Int
	Validator common.Address
	Recipient common.Address
	Token     common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterAckDeposit is a free log retrieval operation binding the contract event 0xfd4c94d13bd227d9b35353e8df2621c1182abab14d3cac53d3c7596b9aaabf63.
//
// Solidity: event AckDeposit(uint256 indexed chainId, uint256 indexed depositId, address indexed validator, address recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterAckDeposit(opts *bind.FilterOpts, chainId []*big.Int, depositId []*big.Int, validator []common.Address) (*CrossbellGatewayAckDepositIterator, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var depositIdRule []interface{}
	for _, depositIdItem := range depositId {
		depositIdRule = append(depositIdRule, depositIdItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "AckDeposit", chainIdRule, depositIdRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayAckDepositIterator{contract: _CrossbellGateway.contract, event: "AckDeposit", logs: logs, sub: sub}, nil
}

// WatchAckDeposit is a free log subscription operation binding the contract event 0xfd4c94d13bd227d9b35353e8df2621c1182abab14d3cac53d3c7596b9aaabf63.
//
// Solidity: event AckDeposit(uint256 indexed chainId, uint256 indexed depositId, address indexed validator, address recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchAckDeposit(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayAckDeposit, chainId []*big.Int, depositId []*big.Int, validator []common.Address) (event.Subscription, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var depositIdRule []interface{}
	for _, depositIdItem := range depositId {
		depositIdRule = append(depositIdRule, depositIdItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "AckDeposit", chainIdRule, depositIdRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayAckDeposit)
				if err := _CrossbellGateway.contract.UnpackLog(event, "AckDeposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAckDeposit is a log parse operation binding the contract event 0xfd4c94d13bd227d9b35353e8df2621c1182abab14d3cac53d3c7596b9aaabf63.
//
// Solidity: event AckDeposit(uint256 indexed chainId, uint256 indexed depositId, address indexed validator, address recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseAckDeposit(log types.Log) (*CrossbellGatewayAckDeposit, error) {
	event := new(CrossbellGatewayAckDeposit)
	if err := _CrossbellGateway.contract.UnpackLog(event, "AckDeposit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayDepositedIterator is returned from FilterDeposited and is used to iterate over the raw logs and unpacked data for Deposited events raised by the CrossbellGateway contract.
type CrossbellGatewayDepositedIterator struct {
	Event *CrossbellGatewayDeposited // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayDepositedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayDeposited)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayDeposited)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayDepositedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayDepositedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayDeposited represents a Deposited event raised by the CrossbellGateway contract.
type CrossbellGatewayDeposited struct {
	ChainId   *big.Int
	DepositId *big.Int
	Recipient common.Address
	Token     common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterDeposited is a free log retrieval operation binding the contract event 0x9d14005dbcc66b2c540389545fdfdf05ac52df61de115ebf7216aa3ebf5816b9.
//
// Solidity: event Deposited(uint256 indexed chainId, uint256 indexed depositId, address indexed recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterDeposited(opts *bind.FilterOpts, chainId []*big.Int, depositId []*big.Int, recipient []common.Address) (*CrossbellGatewayDepositedIterator, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var depositIdRule []interface{}
	for _, depositIdItem := range depositId {
		depositIdRule = append(depositIdRule, depositIdItem)
	}
	var recipientRule []interface{}
	for _, recipientItem := range recipient {
		recipientRule = append(recipientRule, recipientItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "Deposited", chainIdRule, depositIdRule, recipientRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayDepositedIterator{contract: _CrossbellGateway.contract, event: "Deposited", logs: logs, sub: sub}, nil
}

// WatchDeposited is a free log subscription operation binding the contract event 0x9d14005dbcc66b2c540389545fdfdf05ac52df61de115ebf7216aa3ebf5816b9.
//
// Solidity: event Deposited(uint256 indexed chainId, uint256 indexed depositId, address indexed recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchDeposited(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayDeposited, chainId []*big.Int, depositId []*big.Int, recipient []common.Address) (event.Subscription, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var depositIdRule []interface{}
	for _, depositIdItem := range depositId {
		depositIdRule = append(depositIdRule, depositIdItem)
	}
	var recipientRule []interface{}
	for _, recipientItem := range recipient {
		recipientRule = append(recipientRule, recipientItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "Deposited", chainIdRule, depositIdRule, recipientRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayDeposited)
				if err := _CrossbellGateway.contract.UnpackLog(event, "Deposited", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeposited is a log parse operation binding the contract event 0x9d14005dbcc66b2c540389545fdfdf05ac52df61de115ebf7216aa3ebf5816b9.
//
// Solidity: event Deposited(uint256 indexed chainId, uint256 indexed depositId, address indexed recipient, address token, uint256 amount)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseDeposited(log types.Log) (*CrossbellGatewayDeposited, error) {
	event := new(CrossbellGatewayDeposited)
	if err := _CrossbellGateway.contract.UnpackLog(event, "Deposited", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the CrossbellGateway contract.
type CrossbellGatewayInitializedIterator struct {
	Event *CrossbellGatewayInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayInitialized represents a Initialized event raised by the CrossbellGateway contract.
type CrossbellGatewayInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterInitialized(opts *bind.FilterOpts) (*CrossbellGatewayInitializedIterator, error) {

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayInitializedIterator{contract: _CrossbellGateway.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayInitialized) (event.Subscription, error) {

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayInitialized)
				if err := _CrossbellGateway.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseInitialized(log types.Log) (*CrossbellGatewayInitialized, error) {
	event := new(CrossbellGatewayInitialized)
	if err := _CrossbellGateway.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the CrossbellGateway contract.
type CrossbellGatewayPausedIterator struct {
	Event *CrossbellGatewayPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayPaused represents a Paused event raised by the CrossbellGateway contract.
type CrossbellGatewayPaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterPaused(opts *bind.FilterOpts) (*CrossbellGatewayPausedIterator, error) {

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayPausedIterator{contract: _CrossbellGateway.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayPaused) (event.Subscription, error) {

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayPaused)
				if err := _CrossbellGateway.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParsePaused(log types.Log) (*CrossbellGatewayPaused, error) {
	event := new(CrossbellGatewayPaused)
	if err := _CrossbellGateway.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayRequestWithdrawalIterator is returned from FilterRequestWithdrawal and is used to iterate over the raw logs and unpacked data for RequestWithdrawal events raised by the CrossbellGateway contract.
type CrossbellGatewayRequestWithdrawalIterator struct {
	Event *CrossbellGatewayRequestWithdrawal // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayRequestWithdrawalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayRequestWithdrawal)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayRequestWithdrawal)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayRequestWithdrawalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayRequestWithdrawalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayRequestWithdrawal represents a RequestWithdrawal event raised by the CrossbellGateway contract.
type CrossbellGatewayRequestWithdrawal struct {
	ChainId      *big.Int
	WithdrawalId *big.Int
	Recipient    common.Address
	Token        common.Address
	Amount       *big.Int
	Fee          *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRequestWithdrawal is a free log retrieval operation binding the contract event 0x37347ce0b3ba5929e3851296e482bf7e4a1d9298d09c93d2d0848eac40608d6c.
//
// Solidity: event RequestWithdrawal(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed recipient, address token, uint256 amount, uint256 fee)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterRequestWithdrawal(opts *bind.FilterOpts, chainId []*big.Int, withdrawalId []*big.Int, recipient []common.Address) (*CrossbellGatewayRequestWithdrawalIterator, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var withdrawalIdRule []interface{}
	for _, withdrawalIdItem := range withdrawalId {
		withdrawalIdRule = append(withdrawalIdRule, withdrawalIdItem)
	}
	var recipientRule []interface{}
	for _, recipientItem := range recipient {
		recipientRule = append(recipientRule, recipientItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "RequestWithdrawal", chainIdRule, withdrawalIdRule, recipientRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayRequestWithdrawalIterator{contract: _CrossbellGateway.contract, event: "RequestWithdrawal", logs: logs, sub: sub}, nil
}

// WatchRequestWithdrawal is a free log subscription operation binding the contract event 0x37347ce0b3ba5929e3851296e482bf7e4a1d9298d09c93d2d0848eac40608d6c.
//
// Solidity: event RequestWithdrawal(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed recipient, address token, uint256 amount, uint256 fee)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchRequestWithdrawal(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayRequestWithdrawal, chainId []*big.Int, withdrawalId []*big.Int, recipient []common.Address) (event.Subscription, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var withdrawalIdRule []interface{}
	for _, withdrawalIdItem := range withdrawalId {
		withdrawalIdRule = append(withdrawalIdRule, withdrawalIdItem)
	}
	var recipientRule []interface{}
	for _, recipientItem := range recipient {
		recipientRule = append(recipientRule, recipientItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "RequestWithdrawal", chainIdRule, withdrawalIdRule, recipientRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayRequestWithdrawal)
				if err := _CrossbellGateway.contract.UnpackLog(event, "RequestWithdrawal", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRequestWithdrawal is a log parse operation binding the contract event 0x37347ce0b3ba5929e3851296e482bf7e4a1d9298d09c93d2d0848eac40608d6c.
//
// Solidity: event RequestWithdrawal(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed recipient, address token, uint256 amount, uint256 fee)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseRequestWithdrawal(log types.Log) (*CrossbellGatewayRequestWithdrawal, error) {
	event := new(CrossbellGatewayRequestWithdrawal)
	if err := _CrossbellGateway.contract.UnpackLog(event, "RequestWithdrawal", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the CrossbellGateway contract.
type CrossbellGatewayRoleAdminChangedIterator struct {
	Event *CrossbellGatewayRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayRoleAdminChanged represents a RoleAdminChanged event raised by the CrossbellGateway contract.
type CrossbellGatewayRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*CrossbellGatewayRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayRoleAdminChangedIterator{contract: _CrossbellGateway.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayRoleAdminChanged)
				if err := _CrossbellGateway.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseRoleAdminChanged(log types.Log) (*CrossbellGatewayRoleAdminChanged, error) {
	event := new(CrossbellGatewayRoleAdminChanged)
	if err := _CrossbellGateway.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the CrossbellGateway contract.
type CrossbellGatewayRoleGrantedIterator struct {
	Event *CrossbellGatewayRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayRoleGranted represents a RoleGranted event raised by the CrossbellGateway contract.
type CrossbellGatewayRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*CrossbellGatewayRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayRoleGrantedIterator{contract: _CrossbellGateway.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayRoleGranted)
				if err := _CrossbellGateway.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseRoleGranted(log types.Log) (*CrossbellGatewayRoleGranted, error) {
	event := new(CrossbellGatewayRoleGranted)
	if err := _CrossbellGateway.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the CrossbellGateway contract.
type CrossbellGatewayRoleRevokedIterator struct {
	Event *CrossbellGatewayRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayRoleRevoked represents a RoleRevoked event raised by the CrossbellGateway contract.
type CrossbellGatewayRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*CrossbellGatewayRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayRoleRevokedIterator{contract: _CrossbellGateway.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayRoleRevoked)
				if err := _CrossbellGateway.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseRoleRevoked(log types.Log) (*CrossbellGatewayRoleRevoked, error) {
	event := new(CrossbellGatewayRoleRevoked)
	if err := _CrossbellGateway.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewaySubmitWithdrawalSignatureIterator is returned from FilterSubmitWithdrawalSignature and is used to iterate over the raw logs and unpacked data for SubmitWithdrawalSignature events raised by the CrossbellGateway contract.
type CrossbellGatewaySubmitWithdrawalSignatureIterator struct {
	Event *CrossbellGatewaySubmitWithdrawalSignature // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewaySubmitWithdrawalSignatureIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewaySubmitWithdrawalSignature)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewaySubmitWithdrawalSignature)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewaySubmitWithdrawalSignatureIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewaySubmitWithdrawalSignatureIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewaySubmitWithdrawalSignature represents a SubmitWithdrawalSignature event raised by the CrossbellGateway contract.
type CrossbellGatewaySubmitWithdrawalSignature struct {
	ChainId      *big.Int
	WithdrawalId *big.Int
	Validator    common.Address
	Signature    []byte
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterSubmitWithdrawalSignature is a free log retrieval operation binding the contract event 0xf8937107156d7b7d7b390c1fa7ef6deb7efe4984e92b58cab8b82b16e727e8aa.
//
// Solidity: event SubmitWithdrawalSignature(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed validator, bytes signature)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterSubmitWithdrawalSignature(opts *bind.FilterOpts, chainId []*big.Int, withdrawalId []*big.Int, validator []common.Address) (*CrossbellGatewaySubmitWithdrawalSignatureIterator, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var withdrawalIdRule []interface{}
	for _, withdrawalIdItem := range withdrawalId {
		withdrawalIdRule = append(withdrawalIdRule, withdrawalIdItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "SubmitWithdrawalSignature", chainIdRule, withdrawalIdRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewaySubmitWithdrawalSignatureIterator{contract: _CrossbellGateway.contract, event: "SubmitWithdrawalSignature", logs: logs, sub: sub}, nil
}

// WatchSubmitWithdrawalSignature is a free log subscription operation binding the contract event 0xf8937107156d7b7d7b390c1fa7ef6deb7efe4984e92b58cab8b82b16e727e8aa.
//
// Solidity: event SubmitWithdrawalSignature(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed validator, bytes signature)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchSubmitWithdrawalSignature(opts *bind.WatchOpts, sink chan<- *CrossbellGatewaySubmitWithdrawalSignature, chainId []*big.Int, withdrawalId []*big.Int, validator []common.Address) (event.Subscription, error) {

	var chainIdRule []interface{}
	for _, chainIdItem := range chainId {
		chainIdRule = append(chainIdRule, chainIdItem)
	}
	var withdrawalIdRule []interface{}
	for _, withdrawalIdItem := range withdrawalId {
		withdrawalIdRule = append(withdrawalIdRule, withdrawalIdItem)
	}
	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "SubmitWithdrawalSignature", chainIdRule, withdrawalIdRule, validatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewaySubmitWithdrawalSignature)
				if err := _CrossbellGateway.contract.UnpackLog(event, "SubmitWithdrawalSignature", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSubmitWithdrawalSignature is a log parse operation binding the contract event 0xf8937107156d7b7d7b390c1fa7ef6deb7efe4984e92b58cab8b82b16e727e8aa.
//
// Solidity: event SubmitWithdrawalSignature(uint256 indexed chainId, uint256 indexed withdrawalId, address indexed validator, bytes signature)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseSubmitWithdrawalSignature(log types.Log) (*CrossbellGatewaySubmitWithdrawalSignature, error) {
	event := new(CrossbellGatewaySubmitWithdrawalSignature)
	if err := _CrossbellGateway.contract.UnpackLog(event, "SubmitWithdrawalSignature", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayTokenMappedIterator is returned from FilterTokenMapped and is used to iterate over the raw logs and unpacked data for TokenMapped events raised by the CrossbellGateway contract.
type CrossbellGatewayTokenMappedIterator struct {
	Event *CrossbellGatewayTokenMapped // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayTokenMappedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayTokenMapped)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayTokenMapped)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayTokenMappedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayTokenMappedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayTokenMapped represents a TokenMapped event raised by the CrossbellGateway contract.
type CrossbellGatewayTokenMapped struct {
	CrossbellTokens        []common.Address
	ChainIds               []*big.Int
	MainchainTokens        []common.Address
	MainchainTokenDecimals []uint8
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterTokenMapped is a free log retrieval operation binding the contract event 0x31d4b1fa0df2a18e3af7daa11a5bae2a184d37f7b10d162c1fee575c489cc567.
//
// Solidity: event TokenMapped(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterTokenMapped(opts *bind.FilterOpts) (*CrossbellGatewayTokenMappedIterator, error) {

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "TokenMapped")
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayTokenMappedIterator{contract: _CrossbellGateway.contract, event: "TokenMapped", logs: logs, sub: sub}, nil
}

// WatchTokenMapped is a free log subscription operation binding the contract event 0x31d4b1fa0df2a18e3af7daa11a5bae2a184d37f7b10d162c1fee575c489cc567.
//
// Solidity: event TokenMapped(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchTokenMapped(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayTokenMapped) (event.Subscription, error) {

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "TokenMapped")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayTokenMapped)
				if err := _CrossbellGateway.contract.UnpackLog(event, "TokenMapped", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokenMapped is a log parse operation binding the contract event 0x31d4b1fa0df2a18e3af7daa11a5bae2a184d37f7b10d162c1fee575c489cc567.
//
// Solidity: event TokenMapped(address[] crossbellTokens, uint256[] chainIds, address[] mainchainTokens, uint8[] mainchainTokenDecimals)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseTokenMapped(log types.Log) (*CrossbellGatewayTokenMapped, error) {
	event := new(CrossbellGatewayTokenMapped)
	if err := _CrossbellGateway.contract.UnpackLog(event, "TokenMapped", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossbellGatewayUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the CrossbellGateway contract.
type CrossbellGatewayUnpausedIterator struct {
	Event *CrossbellGatewayUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossbellGatewayUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossbellGatewayUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossbellGatewayUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossbellGatewayUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossbellGatewayUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossbellGatewayUnpaused represents a Unpaused event raised by the CrossbellGateway contract.
type CrossbellGatewayUnpaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) FilterUnpaused(opts *bind.FilterOpts) (*CrossbellGatewayUnpausedIterator, error) {

	logs, sub, err := _CrossbellGateway.contract.FilterLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return &CrossbellGatewayUnpausedIterator{contract: _CrossbellGateway.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *CrossbellGatewayUnpaused) (event.Subscription, error) {

	logs, sub, err := _CrossbellGateway.contract.WatchLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossbellGatewayUnpaused)
				if err := _CrossbellGateway.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_CrossbellGateway *CrossbellGatewayFilterer) ParseUnpaused(log types.Log) (*CrossbellGatewayUnpaused, error) {
	event := new(CrossbellGatewayUnpaused)
	if err := _CrossbellGateway.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
